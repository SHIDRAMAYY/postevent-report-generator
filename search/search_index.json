{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"PyCon TW post-event report generator (rg-cli) PyCon TW post-event report generator.A cli command, rg-cli, to generate PyCon TW post-event reports. Previously known as attendee-analyzer. rg-cli is a command line tool for you to generate a basic report of attendees, e.g. a pie chart of fields according to job titles. Currently it only supports a csv file as raw data input. Prerequsite Python 3.7 pipenv for dependency management pip install pipenv invoke for task management pip install invoke Installation Fetch The Source Fetch the source git clone https://github.com/pycontw/pycontw-postevent-report-generator.git Create a working folder to place your attendee raw data outside of the source folder so you won't commit your raw data accidentally. mkdir pycontw-postevent-report-generator-working Create Your Own Python Virtual Environment and Install package inv env.init-dev Install Attendees Analyzer If you want to develop it, please run: inv build.develop If you just want to install it in your virtual environment lib, please run: inv build.install Now you should be ready to go. Test The Installation inv build.test-cli Run Test Cases inv test Example After launching your virtual environment, issue the following command: rg-cli --csv ./a.csv --csv ./b.csv --csv ./c.csv --yaml ./report_generator/data/generic.yaml --package-yaml ./examples/packages.yaml --sponsor-yaml ./examples/sponsors.yaml Follow the prompt instruction and you will get jpg images. So far it is well tested with the data of year 2017. How to contribute Please see the Contribute for further details.","title":"Home"},{"location":"#pycon-tw-post-event-report-generator-rg-cli","text":"PyCon TW post-event report generator.A cli command, rg-cli, to generate PyCon TW post-event reports. Previously known as attendee-analyzer. rg-cli is a command line tool for you to generate a basic report of attendees, e.g. a pie chart of fields according to job titles. Currently it only supports a csv file as raw data input.","title":"PyCon TW post-event report generator (rg-cli)"},{"location":"#prerequsite","text":"Python 3.7 pipenv for dependency management pip install pipenv invoke for task management pip install invoke","title":"Prerequsite"},{"location":"#installation","text":"","title":"Installation"},{"location":"#fetch-the-source","text":"Fetch the source git clone https://github.com/pycontw/pycontw-postevent-report-generator.git Create a working folder to place your attendee raw data outside of the source folder so you won't commit your raw data accidentally. mkdir pycontw-postevent-report-generator-working","title":"Fetch The Source"},{"location":"#create-your-own-python-virtual-environment-and-install-package","text":"inv env.init-dev","title":"Create Your Own Python Virtual Environment and Install package"},{"location":"#install-attendees-analyzer","text":"If you want to develop it, please run: inv build.develop If you just want to install it in your virtual environment lib, please run: inv build.install Now you should be ready to go.","title":"Install Attendees Analyzer"},{"location":"#test-the-installation","text":"inv build.test-cli","title":"Test The Installation"},{"location":"#run-test-cases","text":"inv test","title":"Run Test Cases"},{"location":"#example","text":"After launching your virtual environment, issue the following command: rg-cli --csv ./a.csv --csv ./b.csv --csv ./c.csv --yaml ./report_generator/data/generic.yaml --package-yaml ./examples/packages.yaml --sponsor-yaml ./examples/sponsors.yaml Follow the prompt instruction and you will get jpg images. So far it is well tested with the data of year 2017.","title":"Example"},{"location":"#how-to-contribute","text":"Please see the Contribute for further details.","title":"How to contribute"},{"location":"contribute/","text":"How to contribute Step 1. Fork this repository to your GitHub Step 2. Clone the repository from your GitHub git clone https://github.com/[YOUR GITHUB ACCOUNT]/pycontw-postevent-report-generator.git Step 3. Add this repository to the remote in your local repository git remote add upstream \"https://github.com/pycontw/pycontw-postevent-report-generator\" You can pull the latest code in master branch through git pull upstream master afterward. Step 4. Check out a branch for your new feature git checkout -b [YOUR FEATURE] Step 5. Install Prerequsite python -m pip install pipx python -m pipx install pipenv invoke python -m pipx ensurepath Step 6. Setup Devlopment Environment inv env.init-dev Step 6. Work on your new feature Step 7. Run test cases Make sure all test cases pass. inv test.cov Step 8. Run test coverage Check the test coverage and see where you can add test cases. inv test.cov Step 9. Reformat source code Format your code through black and isort . inv style.reformat Step 10. Run style check Make sure your coding style passes all enforced linters. inv style [Optional] Check your coding style through pylint . Note that you do not have to fix all the issues warned by pylint . inv style.pylint Step 11. Run security check Ensure the packages installed are secure inv secure [Optional] Check whether there is common security issue in the code. Note that you do not have to fix all the issues warned by bandit inv secure.bandit Step 12. Check the installed cli is runnable inv build.test-cli Step 13. Create a Pull Request and celebrate \ud83c\udf89","title":"Contribute"},{"location":"contribute/#how-to-contribute","text":"","title":"How to contribute"},{"location":"contribute/#step-1-fork-this-repository-to-your-github","text":"","title":"Step 1. Fork this repository to your GitHub"},{"location":"contribute/#step-2-clone-the-repository-from-your-github","text":"git clone https://github.com/[YOUR GITHUB ACCOUNT]/pycontw-postevent-report-generator.git","title":"Step 2. Clone the repository from your GitHub"},{"location":"contribute/#step-3-add-this-repository-to-the-remote-in-your-local-repository","text":"git remote add upstream \"https://github.com/pycontw/pycontw-postevent-report-generator\" You can pull the latest code in master branch through git pull upstream master afterward.","title":"Step 3. Add this repository to the remote in your local repository"},{"location":"contribute/#step-4-check-out-a-branch-for-your-new-feature","text":"git checkout -b [YOUR FEATURE]","title":"Step 4. Check out a branch for your new feature"},{"location":"contribute/#step-5-install-prerequsite","text":"python -m pip install pipx python -m pipx install pipenv invoke python -m pipx ensurepath","title":"Step 5. Install Prerequsite"},{"location":"contribute/#step-6-setup-devlopment-environment","text":"inv env.init-dev","title":"Step 6. Setup Devlopment Environment"},{"location":"contribute/#step-6-work-on-your-new-feature","text":"","title":"Step 6. Work on your new feature"},{"location":"contribute/#step-7-run-test-cases","text":"Make sure all test cases pass. inv test.cov","title":"Step 7. Run test cases"},{"location":"contribute/#step-8-run-test-coverage","text":"Check the test coverage and see where you can add test cases. inv test.cov","title":"Step 8. Run test coverage"},{"location":"contribute/#step-9-reformat-source-code","text":"Format your code through black and isort . inv style.reformat","title":"Step 9. Reformat source code"},{"location":"contribute/#step-10-run-style-check","text":"Make sure your coding style passes all enforced linters. inv style [Optional] Check your coding style through pylint . Note that you do not have to fix all the issues warned by pylint . inv style.pylint","title":"Step 10. Run style check"},{"location":"contribute/#step-11-run-security-check","text":"Ensure the packages installed are secure inv secure [Optional] Check whether there is common security issue in the code. Note that you do not have to fix all the issues warned by bandit inv secure.bandit","title":"Step 11. Run security check"},{"location":"contribute/#step-12-check-the-installed-cli-is-runnable","text":"inv build.test-cli","title":"Step 12. Check the installed cli is runnable"},{"location":"contribute/#step-13-create-a-pull-request-and-celebrate","text":"","title":"Step 13. Create a Pull Request and celebrate \ud83c\udf89"}]}